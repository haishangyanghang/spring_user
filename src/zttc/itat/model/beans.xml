<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
   
   <!-- 打开spring的annotation支持 -->
   <context:annotation-config/>
   
   <!-- 设定去那些包中找Annotation -->
   <context:component-scan base-package="zttc.itat"></context:component-scan>
   
   <!-- 配置数据源 -->
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
         destroy-method="close">
         <property name="driverClassName" value="${jdbc.driverClassName}"/>
         <property name="url" value="${jdbc.url}"/>
         <property name="username" value="${jdbc.username}"/>
         <property name="password" value="${jdbc.password}"/>
         
         <!-- 数据连接池初始化 -->
         <property name="initialSize" value="1"/>
         <!-- 连接池最大值 -->
         <!--  <property name="maxActive" value="500"></property>
                             最大空闲时，当经过一个高峰之后，连接池可以将一些用不到的数据连接释放，直到maxIdle为止
         <property name="maxIdle" value="2"></property> -->
         <!-- 当最小空闲空闲时，当连接少于minIdle时会自动申请一些连接 -->
         <property name="minIdle" value="1"></property>
         <property name="maxActive" value="100"></property>
         <property name="maxIdle" value="20"></property>
         <property name="maxWait" value="1000"></property>
   </bean>
   
   <!-- 导入Src目录下的db.properties文件 -->
   <context:property-placeholder location="classpath:db.properties"/>
   <!-- 创建spring的 -->
   <bean id="sessionFactory" 
         class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
         <!-- 注入数据源 -->
         <property name="dataSource" ref="dataSource"></property>
         <!-- 设置spring取哪个包中的相应的实体类 -->
         <property name="packsgesToScan">
            <value>zttc.itat.model</value>
         </property>
         
         <!-- 配置Hibernate -->
         <property name="hibernateProperties">
            <props>
               <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
               <prop key="hibernate.show_sql">true</prop>
               <prop key="hibernate.hbm2ddl.auto">update</prop>
               <prop key="hibernate.format_sql">false</prop>
            </props>
         </property>
   </bean>
   
   <!-- 开启HibernateTemplate并为其注入SessionFactory
                        使用hibernateTemplate不太方便的就是要获取session需要通过getSessionFactory() -->
   <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
      <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
   <!-- 配置spring事务管理 -->
   <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
      <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
   <!-- 配置AOP,spring是通过aop进行事务管理的 -->
   <aop:config>
      <aop:pointcut id="allMethods" expression="execution(* zttc.itat.service.*.*(..))"/>
      <!-- 通过aop:advisor来确定要加入的事务控制方法 -->
      <aop:advisor advice-ref="txAdvice" pointcut-ref="allMethods"/>
   </aop:config>
   
   <!-- 配置哪些方法需要加入事务控制 -->
   <tx:advice id="txAdvice" transaction-manager="txManager">
      <tx:attributes>
      <!-- 让所有的方法都加入事务管理，为了提高效率，可以将一些查询类的方法设置为只读 -->
         <tx:method name="*" propagation="REQUIRED" read-only="true"/>
         <!-- 一下方法均为可修改设计的方法，无法设计成只读 -->
         <tx:method name="add*" propagation="REQUIRED"/>
         <tx:method name="update*" propagation="REQUIRED"/>
         <tx:method name="del*" propagation="REQUIRED"/>
         <tx:method name="save*" propagation="REQUIRED"/>
      </tx:attributes>
   </tx:advice>
   
</beans>
